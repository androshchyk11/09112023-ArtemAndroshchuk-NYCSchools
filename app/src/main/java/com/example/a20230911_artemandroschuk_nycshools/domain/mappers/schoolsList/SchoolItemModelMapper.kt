package com.example.a20230911_artemandroschuk_nycshools.domain.mappers.schoolsList

import com.example.a20230911_artemandroschuk_nycshools.data.models.schoolItem.SchoolItemModel
import com.example.a20230911_artemandroschuk_nycshools.domain.entities.schoolItem.SchoolItemEntity
import com.example.a20230911_artemandroschuk_nycshools.domain.mappers.Mapper
import javax.inject.Inject
import javax.inject.Singleton

@Singleton
class SchoolItemModelMapper @Inject constructor() : Mapper<SchoolItemModel, SchoolItemEntity> {

    companion object {
        const val NOT_AVAILABLE = "Not available"
    }

    override fun mapFrom(model: SchoolItemModel): SchoolItemEntity = with(model) {
        SchoolItemEntity(
            academicOpportunities1 = academicOpportunities1 ?: NOT_AVAILABLE,
            academicOpportunities2 = academicOpportunities2 ?: NOT_AVAILABLE,
            academicOpportunities3 = academicOpportunities3 ?: NOT_AVAILABLE,
            addTlInfo = addTlInfo ?: NOT_AVAILABLE,
            admissionsPriority11 = admissionsPriority11 ?: NOT_AVAILABLE,
            admissionsPriority21 = admissionsPriority21 ?: NOT_AVAILABLE,
            admissionsPriority31 = admissionsPriority31 ?: NOT_AVAILABLE,
            attendanceRate = attendanceRate ?: NOT_AVAILABLE,
            bbl = bbl ?: NOT_AVAILABLE,
            bin = bin ?: NOT_AVAILABLE,
            boro = boro ?: NOT_AVAILABLE,
            borough = borough ?: NOT_AVAILABLE,
            buildingCode = buildingCode ?: NOT_AVAILABLE,
            bus = bus ?: NOT_AVAILABLE,
            censusTract = censusTract ?: NOT_AVAILABLE,
            city = city ?: NOT_AVAILABLE,
            code1 = code1 ?: NOT_AVAILABLE,
            communityBoard = communityBoard ?: NOT_AVAILABLE,
            councilDistrict = councilDistrict ?: NOT_AVAILABLE,
            dbn = dbn ?: NOT_AVAILABLE,
            directions1 = directions1 ?: NOT_AVAILABLE,
            eligibility1 = eligibility1 ?: NOT_AVAILABLE,
            ellPrograms = ellPrograms ?: NOT_AVAILABLE,
            extracurricularActivities = extracurricularActivities ?: NOT_AVAILABLE,
            faxNumber = faxNumber ?: NOT_AVAILABLE,
            finalGrades = finalGrades ?: NOT_AVAILABLE,
            grade9QeApplicants1 = grade9QeApplicants1 ?: NOT_AVAILABLE,
            grade9QeApplicantSperSeat1 = grade9QeApplicantSperSeat1 ?: NOT_AVAILABLE,
            grade9QeFilledFlag1 = grade9QeFilledFlag1 ?: NOT_AVAILABLE,
            grade9SwdApplicants1 = grade9SwdApplicants1 ?: NOT_AVAILABLE,
            grade9SwdApplicantsPerSeat1 = grade9SwdApplicantsPerSeat1 ?: NOT_AVAILABLE,
            grade9SwdFilledFlag1 = grade9SwdFilledFlag1 ?: NOT_AVAILABLE,
            grades2018 = grades2018 ?: NOT_AVAILABLE,
            interest1 = interest1 ?: NOT_AVAILABLE,
            languageClasses = languageClasses ?: NOT_AVAILABLE,
            latitude = latitude ?: NOT_AVAILABLE,
            location = location ?: NOT_AVAILABLE,
            longitude = longitude ?: NOT_AVAILABLE,
            method1 = method1 ?: NOT_AVAILABLE,
            neighborhood = neighborhood ?: NOT_AVAILABLE,
            nta = nta ?: NOT_AVAILABLE,
            offerRate1 = offerRate1 ?: NOT_AVAILABLE,
            overviewParagraph = overviewParagraph ?: NOT_AVAILABLE,
            pctStuEnoughVariety = pctStuEnoughVariety ?: NOT_AVAILABLE,
            pctStuSafe = pctStuSafe ?: NOT_AVAILABLE,
            phoneNumber = phoneNumber ?: NOT_AVAILABLE,
            primaryAddressLine1 = primaryAddressLine1 ?: NOT_AVAILABLE,
            program1 = program1 ?: NOT_AVAILABLE,
            requirement1_1 = requirement1_1 ?: NOT_AVAILABLE,
            requirement2_1 = requirement2_1 ?: NOT_AVAILABLE,
            requirement3_1 = requirement3_1 ?: NOT_AVAILABLE,
            requirement4_1 = requirement4_1 ?: NOT_AVAILABLE,
            requirement5_1 = requirement5_1 ?: NOT_AVAILABLE,
            school10thSeats = school10thSeats ?: NOT_AVAILABLE,
            schoolAccessibilityDescription = schoolAccessibilityDescription ?: NOT_AVAILABLE,
            schoolEmail = schoolEmail ?: NOT_AVAILABLE,
            schoolName = schoolName ?: NOT_AVAILABLE,
            schoolSports = schoolSports ?: NOT_AVAILABLE,
            seats101 = seats101 ?: NOT_AVAILABLE,
            seats9ge1 = seats9ge1 ?: NOT_AVAILABLE,
            seats9swd1 = seats9swd1 ?: NOT_AVAILABLE,
            stateCode = stateCode ?: NOT_AVAILABLE,
            subway = subway ?: NOT_AVAILABLE,
            totalStudents = totalStudents ?: NOT_AVAILABLE,
            transfer = transfer ?: NOT_AVAILABLE,
            website = website ?: NOT_AVAILABLE,
            zip = zip ?: NOT_AVAILABLE
        )
    }

    override fun mapTo(entity: SchoolItemEntity): SchoolItemModel = with(entity) {
        SchoolItemModel(
            academicOpportunities1 = academicOpportunities1,
            academicOpportunities2 = academicOpportunities2,
            academicOpportunities3 = academicOpportunities3,
            addTlInfo = addTlInfo,
            admissionsPriority11 = admissionsPriority11,
            admissionsPriority21 = admissionsPriority21,
            admissionsPriority31 = admissionsPriority31,
            attendanceRate = attendanceRate,
            bbl = bbl,
            bin = bin,
            boro = boro,
            borough = borough,
            buildingCode = buildingCode,
            bus = bus,
            censusTract = censusTract,
            city = city,
            code1 = code1,
            communityBoard = communityBoard,
            councilDistrict = councilDistrict,
            dbn = dbn,
            directions1 = directions1,
            eligibility1 = eligibility1,
            ellPrograms = ellPrograms,
            extracurricularActivities = extracurricularActivities,
            faxNumber = faxNumber,
            finalGrades = finalGrades,
            grade9QeApplicants1 = grade9QeApplicants1,
            grade9QeApplicantSperSeat1 = grade9QeApplicantSperSeat1,
            grade9QeFilledFlag1 = grade9QeFilledFlag1,
            grade9SwdApplicants1 = grade9SwdApplicants1,
            grade9SwdApplicantsPerSeat1 = grade9SwdApplicantsPerSeat1,
            grade9SwdFilledFlag1 = grade9SwdFilledFlag1,
            grades2018 = grades2018,
            interest1 = interest1,
            languageClasses = languageClasses,
            latitude = latitude,
            location = location,
            longitude = longitude,
            method1 = method1,
            neighborhood = neighborhood,
            nta = nta,
            offerRate1 = offerRate1,
            overviewParagraph = overviewParagraph,
            pctStuEnoughVariety = pctStuEnoughVariety,
            pctStuSafe = pctStuSafe,
            phoneNumber = phoneNumber,
            primaryAddressLine1 = primaryAddressLine1,
            program1 = program1,
            requirement1_1 = requirement1_1,
            requirement2_1 = requirement2_1,
            requirement3_1 = requirement3_1,
            requirement4_1 = requirement4_1,
            requirement5_1 = requirement5_1,
            school10thSeats = school10thSeats,
            schoolAccessibilityDescription = schoolAccessibilityDescription,
            schoolEmail = schoolEmail,
            schoolName = schoolName,
            schoolSports = schoolSports,
            seats101 = seats101,
            seats9ge1 = seats9ge1,
            seats9swd1 = seats9swd1,
            stateCode = stateCode,
            subway = subway,
            totalStudents = totalStudents,
            transfer = transfer,
            website = website,
            zip = zip
        )
    }
}